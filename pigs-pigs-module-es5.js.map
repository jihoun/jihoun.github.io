{"version":3,"sources":["webpack:///Users/nicolaslagier/workspace/TheGoodFarm/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///src/app/pigs/detail/pig-detail.component.ts","webpack:///src/app/pigs/detail/pig-detail.component.html","webpack:///src/app/pigs/home/pigs.component.ts","webpack:///src/app/pigs/home/pigs.component.html","webpack:///src/app/pigs/list/pig-list.component.ts","webpack:///src/app/pigs/list/pig-list.component.html","webpack:///src/app/pigs/mock.ts","webpack:///src/app/pigs/pig.model.ts","webpack:///src/app/pigs/pigs.module.ts","webpack:///src/app/pigs/pigs.service.ts"],"names":["LayoutModule","ɵmod","type","ɵinj","factory","LayoutModule_Factory","t","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","ɵfac","MediaMatcher_Factory","ctorParameters","ɵprov","token","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","state","get","queryObservable","observer","handler","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","PigDetailComponent","pigService","activateRoute","breakpointObserver","nbColumns","gutter","pigId$","pig$","params","id","getPig","history$","getCycles","observe","subscribe","result","log","selector","templateUrl","styleUrls","PigsComponent","PigListComponent","pigsService","gt","pigs$","getPigs","pigs","birth","Date","gender","female","male","cycles","pigId","current","fertilizations","date","offSpringCount","Math","round","random","Gender","routes","path","component","children","redirectTo","PigsModule","forChild","declarations","imports","PigsService","pig","find","p","filter","c"],"mappings":"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","file":"pigs-pigs-module-es5.js","sourcesContent":["import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { PigsService } from '../pigs.service';\nimport { Observable } from 'rxjs';\nimport { IPig, ICycle } from '../pig.model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-pig-detail',\n  templateUrl: './pig-detail.component.html',\n  styleUrls: ['./pig-detail.component.scss']\n})\nexport class PigDetailComponent implements OnInit {\n  pig$: Observable<IPig>;\n  history$: Observable<ICycle[]>;\n  public nbColumns: number = 1;\n  public gutter: string = '.8rem';\n\n  constructor(\n    private pigService: PigsService,\n    private activateRoute: ActivatedRoute,\n    private breakpointObserver: BreakpointObserver\n  ) {}\n\n  ngOnInit(): void {\n    const pigId$ = (this.pig$ = this.activateRoute.params.pipe(\n      filter(params => params.id),\n      map(params => params.id)\n    ));\n    this.pig$ = pigId$.pipe(switchMap(id => this.pigService.getPig(id)));\n    this.history$ = pigId$.pipe(switchMap(id => this.pigService.getCycles(id)));\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          this.nbColumns = 1;\n        } else if (result.breakpoints[Breakpoints.Small]){\n          this.nbColumns = 2;\n        } else if (result.breakpoints[Breakpoints.Medium]){\n          this.nbColumns = 3;\n        } else if (result.breakpoints[Breakpoints.Large]){\n          this.nbColumns = 4;\n        } else if (result.breakpoints[Breakpoints.XLarge]){\n          this.nbColumns = 5;\n        }\n      }\n      console.log(result, Breakpoints.Handset);\n    })\n  }\n}\n","<ng-container *ngIf=\"pig$ | async as pig\">\n  <h1>#{{ pig.id }}</h1>\n</ng-container>\n<mat-card class=\"selected-card\">\n  <mat-card-content class=\"content\">\n    <p>Fertilization date (교배일)</p>\n    <p>Fertilization success (착상성공일)</p>\n    <p>Expected date (분만예정일) Fertilization + 115 days</p>\n    <p>\n      Birth date (분만일) Number of baby pig(총산자수)\n    </p>\n    <p>\n      Number of baby pigs being breastfeed (포유개시수)\n    </p>\n    <p>\n      solid food starting date (이유일) number of pigs for solid food (이유두수)\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-icon-button aria-label=\"Edit event\">\n      <mat-icon>edit</mat-icon>\n    </button>\n  </mat-card-actions>\n</mat-card>\n<mat-grid-list class=\"history\" [cols]=\"nbColumns\" [gutterSize]=\"gutter\">\n  <mat-grid-tile *ngFor=\"let cycle of history$ | async\">\n    <mat-card class=\"item mat-elevation-z2\">\n      <h3>Fertilization date (교배일)</h3>\n      <p>🗓</p>\n      <h3>Birth date (분만일)</h3>\n      <p>🗓 {{ cycle.birth | date }}</p>\n      <h3>Number of baby pig(총산자수)</h3>\n      <p>🐖 {{ cycle.offSpringCount }}</p>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pigs',\n  templateUrl: './pigs.component.html',\n  styleUrls: ['./pigs.component.scss'],\n})\nexport class PigsComponent {}\n","<h1>Pigs</h1>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { PigsService } from '../pigs.service';\nimport { Observable } from 'rxjs';\nimport { IPig, Gender } from '../pig.model';\n\n@Component({\n  selector: 'app-pig-list',\n  templateUrl: './pig-list.component.html',\n  styleUrls: ['./pig-list.component.scss']\n})\nexport class PigListComponent implements OnInit {\n  public pigs$: Observable<IPig[]>;\n  public gt: typeof Gender = Gender;\n\n  constructor(private pigsService: PigsService) { }\n\n  public ngOnInit(): void {\n    this.pigs$ = this.pigsService.getPigs();\n  }\n}\n","<div class=\"search\">\n  <mat-form-field appearance=\"outline\" class=\"text\">\n    <mat-label>Search pig</mat-label>\n    <input matInput placeholder=\"Search pig\" />\n    <mat-icon matSuffix aria-hidden=\"true\">search</mat-icon>\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <mat-select name=\"status\">\n      <mat-option value=\"all\">전체</mat-option>\n      <mat-option value=\"alive\">보유모돈</mat-option>\n      <mat-option value=\"pending_fertilization\">후보돈</mat-option>\n      <mat-option value=\"pregnant\">임신돈</mat-option>\n      <mat-option value=\"breast_feeding\">포유돈</mat-option>\n      <mat-option value=\"대리모돈\">대리모돈</mat-option>\n      <mat-option value=\"solid_food_feeding\">이유모돈</mat-option>\n      <mat-option value=\"재발돈\">재발돈</mat-option>\n      <mat-option value=\"miscariage\">유산돈</mat-option>\n      <mat-option value=\"dead\">도폐사돈</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n<mat-list>\n  <ng-container *ngFor=\"let pig of pigs$ | async\">\n    <mat-list-item [routerLink]=\"['../detail', pig.id]\" class=\"item\">\n      <mat-icon mat-list-icon *ngIf=\"pig.gender == gt.female\">♀</mat-icon>\n      <mat-icon mat-list-icon *ngIf=\"pig.gender == gt.male\">♂</mat-icon>\n      <div mat-line>{{ pig.id }}</div>\n      <div mat-line>{{ pig.birth | date }}</div>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n  </ng-container>\n</mat-list>\n","import { IPig, Gender, ICycle } from './pig.model';\n\nexport const pigs: IPig[] = [\n  { id: '112', birth: new Date(), gender: Gender.female },\n  { id: '2', birth: new Date(), gender: Gender.male },\n  { id: '3', birth: new Date(), gender: Gender.female },\n  { id: '4', birth: new Date(), gender: Gender.female },\n  { id: '5', birth: new Date(), gender: Gender.female },\n];\n\nexport const cycles: ICycle[] = [\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [\n      { date: new Date(2019, 6, 15) },\n      { date: new Date(2019, 6, 1) },\n    ],\n    birth: new Date(2019, 10, 11),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [\n      { date: new Date(2019, 6, 15) },\n      { date: new Date(2019, 6, 1) },\n    ],\n    birth: new Date(2019, 10, 11),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n];\n","export enum Gender {\n  male = 'male',\n  female = 'female'\n}\n\nexport interface IPig {\n  id: string;\n  birth: Date;\n  gender: Gender;\n}\n\nexport interface ICycle {\n  pigId: string;\n  current: boolean;\n  fertilizations: { date: Date }[],\n  birth: Date;\n  offSpringCount: number;\n}\n","import { LayoutModule } from '@angular/cdk/layout';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PigDetailComponent } from './detail/pig-detail.component';\nimport { PigsComponent } from './home/pigs.component';\nimport { PigListComponent } from './list/pig-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PigsComponent,\n    children: [\n      { path: 'list', component: PigListComponent },\n      { path: 'detail/:id', component: PigDetailComponent },\n      { path: '', redirectTo: 'list' },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [PigDetailComponent, PigListComponent, PigsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatGridListModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatButtonModule,\n    LayoutModule\n  ],\n})\nexport class PigsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { IPig, Gender, ICycle } from './pig.model';\nimport { cycles, pigs } from './mock';\n\n// export interface\n@Injectable({\n  providedIn: 'root',\n})\nexport class PigsService {\n  private pigs: IPig[] = pigs;\n  private cycles: ICycle[] = cycles;\n\n  getPigs(): Observable<IPig[]> {\n    return of(this.pigs);\n  }\n\n  getPig(id: string): Observable<IPig> {\n    const pig = this.pigs.find((p) => p.id === id);\n    return pig ? of(pig) : throwError('404');\n  }\n\n  addPig(pig: IPig): Observable<void> {\n    return throwError('');\n  }\n\n  getCycles(pigId: string): Observable<ICycle[]> {\n    return of(this.cycles.filter((c) => c.pigId === pigId));\n  }\n}\n"]}