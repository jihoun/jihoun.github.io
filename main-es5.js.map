{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","mod","PigsModule","StaffModule","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","menus","route","label","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'pigs',\n    loadChildren: () =>\n      import('./pigs/pigs.module').then((mod) => mod.PigsModule),\n  },\n  {\n    path: 'staff',\n    loadChildren: () =>\n      import('./staff/staff.module').then((mod) => mod.StaffModule),\n  },\n  { path: '', pathMatch: 'full', redirectTo: '/pigs' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TheGoodFarm';\n  menus = [\n    { route: ['/pigs'], label: '🐷 Pigs' },\n    { route: ['/staff'], label: '👨🏻‍🌾 Staff' },\n    { route: ['/'], label: '⚙️ Settings'}\n  ];\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z4 toolbar\">\n  <h1>The good farm</h1>\n  <span class=\"spring\"></span>\n  <mat-form-field class=\"mat-small\">\n    <mat-select>\n      <mat-option value=\"en\">English</mat-option>\n      <mat-option value=\"kr\">한국어</mat-option>\n      <mat-option value=\"th\">Thai</mat-option>\n      <mat-option value=\"vn\">Vietnamese</mat-option>\n    </mat-select>\n  </mat-form-field>\n</mat-toolbar>\n<mat-sidenav-container class=\"container\">\n  <mat-sidenav class=\"mat-elevation-z2 sidenav\" mode=\"side\" opened>\n    <mat-nav-list>\n      <a\n        routerLinkActive=\"active-route\"\n        [routerLinkActiveOptions]=\"{ exact: false }\"\n        mat-list-item\n        [routerLink]=\"menu.route\"\n        *ngFor=\"let menu of menus\"\n        >{{ menu.label }}</a\n      >\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSelectModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}