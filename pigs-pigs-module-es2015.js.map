{"version":3,"sources":["/Users/nicolaslagier/workspace/TheGoodFarm/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","./src/app/pigs/detail/pig-detail.component.ts","./src/app/pigs/detail/pig-detail.component.html","./src/app/pigs/home/pigs.component.ts","./src/app/pigs/home/pigs.component.html","./src/app/pigs/list/pig-list.component.ts","./src/app/pigs/list/pig-list.component.html","./src/app/pigs/mock.ts","./src/app/pigs/pig.model.ts","./src/app/pigs/pigs.module.ts","./src/app/pigs/pigs.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAC1C;AACiB;AACmB;AACjC;;AAEpD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACQ;AAChD;AACA;AACA,oBAAoB,8DAAuB,EAAE,qBAAqB;AAClE,oBAAoB,8DAAuB,EAAE,4CAA4C,kCAAkC,EAAE,EAAE;AAC/H,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB,iBAAiB;AACjB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,CAAC,8DAAe,GAAG;AACxH;AACA;AACA,KAAK,OAAO,8DAAQ;AACpB;AACA,wCAAwC,wEAAkB,EAAE,2CAA2C,yBAAyB,8DAAQ,CAAC,8DAAQ,GAAG,EAAE,2CAA2C;AACjM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,8DAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AACrE,WAAW,EAYV;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA,yBAAyB,EAAE;AAC3B,sCAAsC,MAAM,EAAE,eAAe,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAYV;AACD;AACA;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAWV;AACD;AACA;AACA;AACA,kBAAkB;AAClB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,yEAAW;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,yEAAW;AAChD,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,0DAAa;AAC3C;AACA,0BAA0B,mDAAM,sBAAsB,2DAAI,2BAA2B,2DAAI,KAAK,mEAAY;AAC1G,oCAAoC,0DAAG;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,+CAAU;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AA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","file":"pigs-pigs-module-es2015.js","sourcesContent":["import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { PigsService } from '../pigs.service';\nimport { Observable } from 'rxjs';\nimport { IPig, ICycle } from '../pig.model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-pig-detail',\n  templateUrl: './pig-detail.component.html',\n  styleUrls: ['./pig-detail.component.scss']\n})\nexport class PigDetailComponent implements OnInit {\n  pig$: Observable<IPig>;\n  history$: Observable<ICycle[]>;\n  public nbColumns: number = 1;\n  public gutter: string = '.8rem';\n\n  constructor(\n    private pigService: PigsService,\n    private activateRoute: ActivatedRoute,\n    private breakpointObserver: BreakpointObserver\n  ) {}\n\n  ngOnInit(): void {\n    const pigId$ = (this.pig$ = this.activateRoute.params.pipe(\n      filter(params => params.id),\n      map(params => params.id)\n    ));\n    this.pig$ = pigId$.pipe(switchMap(id => this.pigService.getPig(id)));\n    this.history$ = pigId$.pipe(switchMap(id => this.pigService.getCycles(id)));\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          this.nbColumns = 1;\n        } else if (result.breakpoints[Breakpoints.Small]){\n          this.nbColumns = 2;\n        } else if (result.breakpoints[Breakpoints.Medium]){\n          this.nbColumns = 3;\n        } else if (result.breakpoints[Breakpoints.Large]){\n          this.nbColumns = 4;\n        } else if (result.breakpoints[Breakpoints.XLarge]){\n          this.nbColumns = 5;\n        }\n      }\n      console.log(result, Breakpoints.Handset);\n    })\n  }\n}\n","<ng-container *ngIf=\"pig$ | async as pig\">\n  <h1>#{{ pig.id }}</h1>\n</ng-container>\n<mat-card class=\"selected-card\">\n  <mat-card-content class=\"content\">\n    <p>Fertilization date (교배일)</p>\n    <p>Fertilization success (착상성공일)</p>\n    <p>Expected date (분만예정일) Fertilization + 115 days</p>\n    <p>\n      Birth date (분만일) Number of baby pig(총산자수)\n    </p>\n    <p>\n      Number of baby pigs being breastfeed (포유개시수)\n    </p>\n    <p>\n      solid food starting date (이유일) number of pigs for solid food (이유두수)\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-icon-button aria-label=\"Edit event\">\n      <mat-icon>edit</mat-icon>\n    </button>\n  </mat-card-actions>\n</mat-card>\n<mat-grid-list class=\"history\" [cols]=\"nbColumns\" [gutterSize]=\"gutter\">\n  <mat-grid-tile *ngFor=\"let cycle of history$ | async\">\n    <mat-card class=\"item mat-elevation-z2\">\n      <h3>Fertilization date (교배일)</h3>\n      <p>🗓</p>\n      <h3>Birth date (분만일)</h3>\n      <p>🗓 {{ cycle.birth | date }}</p>\n      <h3>Number of baby pig(총산자수)</h3>\n      <p>🐖 {{ cycle.offSpringCount }}</p>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pigs',\n  templateUrl: './pigs.component.html',\n  styleUrls: ['./pigs.component.scss'],\n})\nexport class PigsComponent {}\n","<h1>Pigs</h1>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { PigsService } from '../pigs.service';\nimport { Observable } from 'rxjs';\nimport { IPig, Gender } from '../pig.model';\n\n@Component({\n  selector: 'app-pig-list',\n  templateUrl: './pig-list.component.html',\n  styleUrls: ['./pig-list.component.scss']\n})\nexport class PigListComponent implements OnInit {\n  public pigs$: Observable<IPig[]>;\n  public gt: typeof Gender = Gender;\n\n  constructor(private pigsService: PigsService) { }\n\n  public ngOnInit(): void {\n    this.pigs$ = this.pigsService.getPigs();\n  }\n}\n","<div class=\"search\">\n  <mat-form-field appearance=\"outline\" class=\"text\">\n    <mat-label>Search pig</mat-label>\n    <input matInput placeholder=\"Search pig\" />\n    <mat-icon matSuffix aria-hidden=\"true\">search</mat-icon>\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <mat-select name=\"status\">\n      <mat-option value=\"all\">전체</mat-option>\n      <mat-option value=\"alive\">보유모돈</mat-option>\n      <mat-option value=\"pending_fertilization\">후보돈</mat-option>\n      <mat-option value=\"pregnant\">임신돈</mat-option>\n      <mat-option value=\"breast_feeding\">포유돈</mat-option>\n      <mat-option value=\"대리모돈\">대리모돈</mat-option>\n      <mat-option value=\"solid_food_feeding\">이유모돈</mat-option>\n      <mat-option value=\"재발돈\">재발돈</mat-option>\n      <mat-option value=\"miscariage\">유산돈</mat-option>\n      <mat-option value=\"dead\">도폐사돈</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n<mat-list>\n  <ng-container *ngFor=\"let pig of pigs$ | async\">\n    <mat-list-item [routerLink]=\"['../detail', pig.id]\" class=\"item\">\n      <mat-icon mat-list-icon *ngIf=\"pig.gender == gt.female\">♀</mat-icon>\n      <mat-icon mat-list-icon *ngIf=\"pig.gender == gt.male\">♂</mat-icon>\n      <div mat-line>{{ pig.id }}</div>\n      <div mat-line>{{ pig.birth | date }}</div>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n  </ng-container>\n</mat-list>\n","import { IPig, Gender, ICycle } from './pig.model';\n\nexport const pigs: IPig[] = [\n  { id: '112', birth: new Date(), gender: Gender.female },\n  { id: '2', birth: new Date(), gender: Gender.male },\n  { id: '3', birth: new Date(), gender: Gender.female },\n  { id: '4', birth: new Date(), gender: Gender.female },\n  { id: '5', birth: new Date(), gender: Gender.female },\n];\n\nexport const cycles: ICycle[] = [\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [\n      { date: new Date(2019, 6, 15) },\n      { date: new Date(2019, 6, 1) },\n    ],\n    birth: new Date(2019, 10, 11),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [\n      { date: new Date(2019, 6, 15) },\n      { date: new Date(2019, 6, 1) },\n    ],\n    birth: new Date(2019, 10, 11),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n  {\n    pigId: '112',\n    current: false,\n    fertilizations: [{ date: new Date(2019, 1, 15) }],\n    birth: new Date(2019, 4, 1),\n    offSpringCount: Math.round(Math.random() * 15),\n  },\n];\n","export enum Gender {\n  male = 'male',\n  female = 'female'\n}\n\nexport interface IPig {\n  id: string;\n  birth: Date;\n  gender: Gender;\n}\n\nexport interface ICycle {\n  pigId: string;\n  current: boolean;\n  fertilizations: { date: Date }[],\n  birth: Date;\n  offSpringCount: number;\n}\n","import { LayoutModule } from '@angular/cdk/layout';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PigDetailComponent } from './detail/pig-detail.component';\nimport { PigsComponent } from './home/pigs.component';\nimport { PigListComponent } from './list/pig-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PigsComponent,\n    children: [\n      { path: 'list', component: PigListComponent },\n      { path: 'detail/:id', component: PigDetailComponent },\n      { path: '', redirectTo: 'list' },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [PigDetailComponent, PigListComponent, PigsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatGridListModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatButtonModule,\n    LayoutModule\n  ],\n})\nexport class PigsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { IPig, Gender, ICycle } from './pig.model';\nimport { cycles, pigs } from './mock';\n\n// export interface\n@Injectable({\n  providedIn: 'root',\n})\nexport class PigsService {\n  private pigs: IPig[] = pigs;\n  private cycles: ICycle[] = cycles;\n\n  getPigs(): Observable<IPig[]> {\n    return of(this.pigs);\n  }\n\n  getPig(id: string): Observable<IPig> {\n    const pig = this.pigs.find((p) => p.id === id);\n    return pig ? of(pig) : throwError('404');\n  }\n\n  addPig(pig: IPig): Observable<void> {\n    return throwError('');\n  }\n\n  getCycles(pigId: string): Observable<ICycle[]> {\n    return of(this.cycles.filter((c) => c.pigId === pigId));\n  }\n}\n"],"sourceRoot":"webpack:///"}